//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
  binaryTargets   = ["native", "linux-arm64-openssl-3.0.x"]
}

generator zod {
  provider                         = "zod-prisma-types"
  createOptionalDefaultValuesTypes = true
  createRelationValuesTypes        = true
  createPartialTypes               = true
}

generator json {
  provider = "prisma-json-types-generator"
}

/// @@allow('all', true)
/// @@allow('all', true)
model Claim {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime  @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean   @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int       @id() @default(autoincrement())
  /// Name of the claim
  /// @zod.string.min(1)
  name            String    @unique()
  /// Description of the claim
  description     String?
  /// Roles that have this claim
  roles           Role[]
}

/// @@allow('all', true)
model User {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime      @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean       @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int           @id() @default(autoincrement())
  /// The user's first name
  /// @zod.string.min(1)
  firstName       String
  /// The user's last name
  /// @zod.string.min(1)
  lastName        String
  /// The user's avatar file ID
  avatarId        Int?          @unique()
  /// The user's avatar file
  avatar          File?         @relation("Avatar", fields: [avatarId], references: [id])
  /// The user's options
  options         UserOptions?
  /// The user's roles
  roles           Role[]
  /// The user's saved table layouts
  tableLayouts    TableLayout[]
}

/// @@allow('all', true)
model File {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime  @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean   @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int       @id() @default(autoincrement())
  /// File name
  name            String
  /// File type
  type            String
  /// File size
  size            Int
  /// File path
  path            String    @unique()
  /// A note for the file
  note            String?
  /// User Avatar
  user            User?     @relation("Avatar")
}

/// @@allow('all', true)
model UserOptions {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime  @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean   @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int       @id() @default(autoincrement())
  /// The user ID that these options belong to
  userId          Int       @unique()
  /// The user that these options belong to
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// @@allow('all', true)
model Role {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime  @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean   @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int       @id() @default(autoincrement())
  /// Role name
  /// @zod.string.min(1)
  name            String
  /// Role description
  description     String?
  /// Claims that this role has
  claims          Claim[]
  /// Users that have this role
  users           User[]
}

/// @@allow('all', true)
model TableLayout {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime  @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean   @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int       @id() @default(autoincrement())
  /// Name of the table layout
  name            String
  isPublic        Boolean   @default(false)
  /// Name of the table
  tableName       String
  /// Schema of the table
  schema          String
  /// The user ID for which the table layout is created
  userId          Int?
  /// The user for which the table layout is created
  user            User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

/// @@allow('all', true)
/// @@allow('all', true)
model Log {
  /// Date and time when the record was created, the default value is the current date and time
  createdAt       DateTime  @default(now())
  /// Identifier of the account who created the record
  createdById     Int?
  /// Identifier of the user who created the record
  createdByUserId Int?
  /// Date and time of the last update of the record, the default value is the current date and time
  updatedAt       DateTime?
  /// Identifier of the account who last updated the record
  updatedById     Int?
  /// Identifier of the user who last updated the record
  updatedByUserId Int?
  /// Indicates whether the record is marked as deleted
  deleted         Boolean   @default(false)
  /// Date and time of deletion of the record
  deletedAt       DateTime?
  /// Identifier of the account who deleted the record
  deletedById     Int?
  /// Identifier of the user who deleted the record
  deletedByUserId Int?
  id              Int       @id() @default(autoincrement())
  /// ID of the entity that was affected
  entityId        Int
  /// The operation that was performed
  operation       String
  /// The entity that was affected (model)
  entity          String
  /// The difference/change
  diff            String
}
